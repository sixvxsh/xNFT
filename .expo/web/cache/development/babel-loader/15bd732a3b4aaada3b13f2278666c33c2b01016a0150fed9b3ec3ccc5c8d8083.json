{"ast":null,"code":"import ReactXnft, { Button, Text, View, usePublicKey } from \"react-xnft\";\nimport { Keypair, SystemProgram, Transaction, clusterApiUrl, Connection } from \"@solana/web3.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nReactXnft.events.on(\"connect\", function () {});\nvar connection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\nvar fromKeypair = usePublicKey();\nexport function HomeScreen() {\n  var onClick = function onClick() {\n    window.xnft.solana.signTransaction(new Transaction().add(SystemProgram.transfer({\n      fromPubkey: frompublicKey,\n      toPubkey: Keypair.generate().publicKey,\n      lamports: 1\n    })));\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Hi Blockchain Guyes \"\n    }), _jsx(Button, {\n      onClick: onClick,\n      children: \"Sign your Message\"\n    })]\n  });\n}","map":{"version":3,"names":["ReactXnft","Button","Text","View","usePublicKey","Keypair","SystemProgram","Transaction","clusterApiUrl","Connection","jsx","_jsx","jsxs","_jsxs","events","on","connection","fromKeypair","HomeScreen","onClick","window","xnft","solana","signTransaction","add","transfer","fromPubkey","frompublicKey","toPubkey","generate","publicKey","lamports","children"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/src/screens/HomeScreen.tsx"],"sourcesContent":["import { FlatList } from \"react-native\";\nimport tw from \"twrnc\";\n\nimport { Screen } from \"../components/Screen\";\nimport ReactXnft, { Button,  Text, View, usePublicKey } from \"react-xnft\";\nimport { Keypair, SystemProgram, Transaction, clusterApiUrl, Connection } from \"@solana/web3.js\";\n \n\n\n ReactXnft.events.on(\"connect\", () => {\n});\n  \n\nconst connection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\n\nconst fromKeypair = usePublicKey()\n\n\n\nexport function HomeScreen() {\n\n  // const onClick = () => {\n  // window.xnft.solana.signMessage(new TextEncoder().encode('If you Agree with this message please approve it'))\n  // }\n  const onClick = () => {\n    window.xnft.solana.signTransaction(\n      new Transaction().add(\n        SystemProgram.transfer({\n          fromPubkey: frompublicKey,\n          toPubkey: Keypair.generate().publicKey,\n          lamports: 1,\n          \n        })\n      )\n    )\n  }\n  \n \n  return (\n    <View>\n      <Text >Hi Blockchain Guyes </Text>\n      <Button onClick={onClick}>Sign your Message</Button>\n    </View>\n  );\n  }\n\n"],"mappings":"AAIA,OAAOA,SAAS,IAAIC,MAAM,EAAGC,IAAI,EAAEC,IAAI,EAAEC,YAAY,QAAQ,YAAY;AACzE,SAASC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,aAAa,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIhGb,SAAS,CAACc,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,YAAM,CACtC,CAAC,CAAC;AAGF,IAAMC,UAAU,GAAG,IAAIP,UAAU,CAACD,aAAa,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC;AAEvE,IAAMS,WAAW,GAAGb,YAAY,EAAE;AAIlC,OAAO,SAASc,UAAUA,CAAA,EAAG;EAK3B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,eAAe,CAChC,IAAIhB,WAAW,EAAE,CAACiB,GAAG,CACnBlB,aAAa,CAACmB,QAAQ,CAAC;MACrBC,UAAU,EAAEC,aAAa;MACzBC,QAAQ,EAAEvB,OAAO,CAACwB,QAAQ,EAAE,CAACC,SAAS;MACtCC,QAAQ,EAAE;IAEZ,CAAC,CAAC,CACH,CACF;EACH,CAAC;EAGD,OACElB,KAAA,CAACV,IAAI;IAAA6B,QAAA,GACHrB,IAAA,CAACT,IAAI;MAAA8B,QAAA,EAAE;IAAoB,EAAO,EAClCrB,IAAA,CAACV,MAAM;MAACkB,OAAO,EAAEA,OAAQ;MAAAa,QAAA,EAAC;IAAiB,EAAS;EAAA,EAC/C;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}