{"ast":null,"code":"import ReactXnft, { Button, Text, View, usePublicKey } from \"react-xnft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nReactXnft.events.on(\"connect\", function () {});\nexport function HomeScreen() {\n  var publicKey = usePublicKey();\n  var onClick = function onClick() {\n    window.xnft.solana.signMessage(Buffer.from(\"Hello\"));\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Hi Blockchain Guyes!- Please Sign your message\"\n    }), _jsx(Button, {\n      onClick: onClick,\n      children: \" Sign\"\n    })]\n  });\n}","map":{"version":3,"names":["ReactXnft","Button","Text","View","usePublicKey","jsx","_jsx","jsxs","_jsxs","events","on","HomeScreen","publicKey","onClick","window","xnft","solana","signMessage","Buffer","from","children"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart/src/screens/HomeScreen.tsx"],"sourcesContent":["import {  FlatList } from \"react-native\";\nimport tw from \"twrnc\";\n\nimport { Screen } from \"../components/Screen\";\nimport ReactXnft, { Button, Text, View, usePublicKey } from \"react-xnft\";\n\n  \n\n\nReactXnft.events.on(\"connect\", () => {\n  \n});\n  \nexport function HomeScreen() {\n  \n  \n  const publicKey = usePublicKey()\n  \n  const onClick = () => {\n  window.xnft.solana.signMessage(Buffer.from(\"Hello\"))\n  }\n  \n  return (\n    <View>\n      <Text>\n        Hi Blockchain Guyes!- Please Sign your message\n      </Text>\n      <Button onClick={onClick}> Sign</Button>\n    </View>\n      \n  );\n}\n  \n\n\n\n\n\n//   const features = [\n//     \"tailwind\",\n//     \"recoil\",\n//     \"native styling\",\n//     \"fetching code from an API\",\n//     \"using a FlatList to render data\",\n//     \"Image for both remote & local images\",\n//     \"custom fonts\",\n//     \"sign a transaction / message\",\n//     \"theme hook with light/dark support\",\n//   ];\n\n\n\n  // return (\n  //   <Screen>\n  //     <Text style={tw`mb-4`}>\n  //       You'll find several examples of how to build xNFTs using react-native:\n  //     </Text>\n  //     <FlatList\n  //       data={features}\n  //       keyExtractor={(item) => item}\n  //       renderItem={({ item }) => <Text>- {item}</Text>}\n  //     />\n  //   </Screen>\n  // );"],"mappings":"AAIA,OAAOA,SAAS,IAAIC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,YAAY,QAAQ,YAAY;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKzER,SAAS,CAACS,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,YAAM,CAErC,CAAC,CAAC;AAEF,OAAO,SAASC,UAAUA,CAAA,EAAG;EAG3B,IAAMC,SAAS,GAAGR,YAAY,EAAE;EAEhC,IAAMS,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACtBC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,CAACC,MAAM,CAACC,IAAI,CAAC,OAAO,CAAC,CAAC;EACpD,CAAC;EAED,OACEX,KAAA,CAACL,IAAI;IAAAiB,QAAA,GACHd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAEN,EAAO,EACPd,IAAA,CAACL,MAAM;MAACY,OAAO,EAAEA,OAAQ;MAAAO,QAAA,EAAC;IAAK,EAAS;EAAA,EACnC;AAGX"},"metadata":{},"sourceType":"module","externalDependencies":[]}