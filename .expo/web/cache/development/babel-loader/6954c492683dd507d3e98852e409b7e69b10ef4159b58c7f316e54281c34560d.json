{"ast":null,"code":"import ReactXnft, { Button, Text, View, usePublicKey } from \"react-xnft\";\nimport { SystemProgram, Transaction, PublicKey } from \"@solana/web3.js\";\nimport * as buffer from \"buffer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nwindow.Buffer = buffer.Buffer;\nReactXnft.events.on(\"connect\", function () {});\nexport function HomeScreen() {\n  var publicKey = usePublicKey();\n  var toPubkey = new PublicKey(\"3VHwVfYVibgWasVAAGX71DwTMnj3Zxn6ATir3ohsCGqP\");\n  var lamportsToSend = 1_000_000;\n  var onClick = function onClick() {\n    var transferTransaction = window.xnft.solana.signTransaction(new Transaction().add(SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: toPubkey,\n      lamports: lamportsToSend\n    })));\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Hi Blockchain Guyes.\"\n    }), _jsx(Button, {\n      onClick: onClick,\n      children: \"Sign your Message\"\n    })]\n  });\n}","map":{"version":3,"names":["ReactXnft","Button","Text","View","usePublicKey","SystemProgram","Transaction","PublicKey","buffer","jsx","_jsx","jsxs","_jsxs","window","Buffer","events","on","HomeScreen","publicKey","toPubkey","lamportsToSend","onClick","transferTransaction","xnft","solana","signTransaction","add","transfer","fromPubkey","lamports","children"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/src/screens/HomeScreen.tsx"],"sourcesContent":["import { FlatList } from \"react-native\";\nimport tw from \"twrnc\";\n\nimport { Screen } from \"../components/Screen\";\nimport ReactXnft, { Button,  Text, View, usePublicKey } from \"react-xnft\";\nimport { SystemProgram, Transaction, Keypair, PublicKey } from \"@solana/web3.js\";\nimport * as buffer from \"buffer\";\nwindow.Buffer = buffer.Buffer;\n\n\n\nReactXnft.events.on(\"connect\", () => {\n  \n});\n\n\n  \nexport function HomeScreen() {\n  const publicKey = usePublicKey()\n  const toPubkey = new PublicKey(\"3VHwVfYVibgWasVAAGX71DwTMnj3Zxn6ATir3ohsCGqP\")\n  const lamportsToSend = 1_000_000;\n\n  const onClick = () => {\n\n    const transferTransaction = window.xnft.solana.signTransaction(\n    new Transaction().add(\n      SystemProgram.transfer({\n        fromPubkey: publicKey,\n        toPubkey: toPubkey,\n        lamports:lamportsToSend,\n      })\n    )\n  )\n}\n  \nreturn (\n  <View>\n    <Text >Hi Blockchain Guyes.</Text>\n    <Button onClick={onClick}>Sign your Message</Button>\n  </View>\n  );\n}\n"],"mappings":"AAIA,OAAOA,SAAS,IAAIC,MAAM,EAAGC,IAAI,EAAEC,IAAI,EAAEC,YAAY,QAAQ,YAAY;AACzE,SAASC,aAAa,EAAEC,WAAW,EAAWC,SAAS,QAAQ,iBAAiB;AAChF,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACjCC,MAAM,CAACC,MAAM,GAAGN,MAAM,CAACM,MAAM;AAI7Bd,SAAS,CAACe,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,YAAM,CAErC,CAAC,CAAC;AAIF,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,IAAMC,SAAS,GAAGd,YAAY,EAAE;EAChC,IAAMe,QAAQ,GAAG,IAAIZ,SAAS,CAAC,8CAA8C,CAAC;EAC9E,IAAMa,cAAc,GAAG,SAAS;EAEhC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAEpB,IAAMC,mBAAmB,GAAGT,MAAM,CAACU,IAAI,CAACC,MAAM,CAACC,eAAe,CAC9D,IAAInB,WAAW,EAAE,CAACoB,GAAG,CACnBrB,aAAa,CAACsB,QAAQ,CAAC;MACrBC,UAAU,EAAEV,SAAS;MACrBC,QAAQ,EAAEA,QAAQ;MAClBU,QAAQ,EAACT;IACX,CAAC,CAAC,CACH,CACF;EACH,CAAC;EAED,OACER,KAAA,CAACT,IAAI;IAAA2B,QAAA,GACHpB,IAAA,CAACR,IAAI;MAAA4B,QAAA,EAAE;IAAoB,EAAO,EAClCpB,IAAA,CAACT,MAAM;MAACoB,OAAO,EAAEA,OAAQ;MAAAS,QAAA,EAAC;IAAiB,EAAS;EAAA,EAC/C;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}