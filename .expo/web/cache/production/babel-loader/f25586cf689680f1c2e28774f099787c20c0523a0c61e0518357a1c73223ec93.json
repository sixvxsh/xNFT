{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"children\",\"screenListeners\",\"screenOptions\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,StackActions,StackRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import StackView from\"../views/Stack/StackView\";function StackNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,_excluded);var mode=rest.mode;warnOnce(mode!=null,\"Stack Navigator: 'mode=\\\"\"+mode+\"\\\"' is deprecated. Use 'presentation: \\\"\"+mode+\"\\\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.\");var headerMode=rest.headerMode;warnOnce(headerMode==='none',\"Stack Navigator: 'headerMode=\\\"none\\\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.\");warnOnce(headerMode!=null&&headerMode!=='none',\"Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.\");var keyboardHandlingEnabled=rest.keyboardHandlingEnabled;warnOnce(keyboardHandlingEnabled!==undefined,\"Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.\");var defaultScreenOptions={presentation:mode,headerShown:headerMode?headerMode!=='none':true,headerMode:headerMode&&headerMode!=='none'?headerMode:undefined,keyboardHandlingEnabled:keyboardHandlingEnabled};var _useNavigationBuilder=useNavigationBuilder(StackRouter,{id:id,initialRouteName:initialRouteName,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;React.useEffect(function(){var _navigation$addListen;return(_navigation$addListen=navigation.addListener)===null||_navigation$addListen===void 0?void 0:_navigation$addListen.call(navigation,'tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(NavigationContent,null,React.createElement(StackView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation})));}export default createNavigatorFactory(StackNavigator);","map":{"version":3,"names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","warnOnce","StackView","StackNavigator","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties","_excluded","mode","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","useEffect","_navigation$addListen","addListener","call","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","_objectSpread","popToTop","target","key","createElement","_extends"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/@react-navigation/stack/lib/module/navigators/createStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  StackHeaderMode,\n  StackNavigationConfig,\n  StackNavigationEventMap,\n  StackNavigationOptions,\n} from '../types';\nimport StackView from '../views/Stack/StackView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap\n> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  // @ts-expect-error: mode is deprecated\n  const mode = rest.mode as 'card' | 'modal' | undefined;\n\n  warnOnce(\n    mode != null,\n    `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const headerMode = rest.headerMode as StackHeaderMode | 'none' | undefined;\n\n  warnOnce(\n    headerMode === 'none',\n    `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`\n  );\n\n  warnOnce(\n    headerMode != null && headerMode !== 'none',\n    `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n\n  warnOnce(\n    keyboardHandlingEnabled !== undefined,\n    `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`\n  );\n\n  const defaultScreenOptions: StackNavigationOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled,\n  };\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <StackView\n        {...rest}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}