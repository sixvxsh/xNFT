{"ast":null,"code":"import ReactXnft,{Button,Text,View,usePublicKey}from\"react-xnft\";import{Keypair,SystemProgram,Transaction,clusterApiUrl,Connection}from\"@solana/web3.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ReactXnft.events.on(\"connect\",function(){});var connection=new Connection(clusterApiUrl(\"devnet\"),\"confirmed\");var publicKey=usePublicKey();export function HomeScreen(){var onClick=function onClick(){window.xnft.solana.signTransaction(new Transaction().add(SystemProgram.transfer({fromPubkey:publicKey,toPubkey:Keypair.generate().publicKey,lamports:1})));};return _jsxs(View,{children:[_jsx(Text,{children:\"Hi Blockchain Guyes \"}),_jsx(Button,{onClick:onClick,children:\"Sign your Message\"})]});}","map":{"version":3,"names":["ReactXnft","Button","Text","View","usePublicKey","Keypair","SystemProgram","Transaction","clusterApiUrl","Connection","jsx","_jsx","jsxs","_jsxs","events","on","connection","publicKey","HomeScreen","onClick","window","xnft","solana","signTransaction","add","transfer","fromPubkey","toPubkey","generate","lamports","children"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/src/screens/HomeScreen.tsx"],"sourcesContent":["import { FlatList } from \"react-native\";\nimport tw from \"twrnc\";\n\nimport { Screen } from \"../components/Screen\";\nimport ReactXnft, { Button,  Text, View, usePublicKey } from \"react-xnft\";\nimport { Keypair, SystemProgram, Transaction, clusterApiUrl, Connection } from \"@solana/web3.js\";\n \n\n\n ReactXnft.events.on(\"connect\", () => {\n});\n  \n\nconst connection = new Connection(clusterApiUrl(\"devnet\"), \"confirmed\");\n\nconst publicKey = usePublicKey()\n\nexport function HomeScreen() {\n\n  // const onClick = () => {\n  // window.xnft.solana.signMessage(new TextEncoder().encode('If you Agree with this message please approve it'))\n  // }\n  const onClick = () => {\n    window.xnft.solana.signTransaction(\n      new Transaction().add(\n        SystemProgram.transfer({\n          fromPubkey: publicKey,\n          toPubkey: Keypair.generate().publicKey,\n          lamports: 1,\n          \n        })\n      )\n    )\n  }\n  \n \n  return (\n    <View>\n      <Text >Hi Blockchain Guyes </Text>\n      <Button onClick={onClick}>Sign your Message</Button>\n    </View>\n  );\n  }\n\n"],"mappings":"AAIA,MAAO,CAAAA,SAAS,EAAIC,MAAM,CAAGC,IAAI,CAAEC,IAAI,CAAEC,YAAY,KAAQ,YAAY,CACzE,OAASC,OAAO,CAAEC,aAAa,CAAEC,WAAW,CAAEC,aAAa,CAAEC,UAAU,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIhGb,SAAS,CAACc,MAAM,CAACC,EAAE,CAAC,SAAS,CAAE,UAAM,CACtC,CAAC,CAAC,CAGF,GAAM,CAAAC,UAAU,CAAG,GAAI,CAAAP,UAAU,CAACD,aAAa,CAAC,QAAQ,CAAC,CAAE,WAAW,CAAC,CAEvE,GAAM,CAAAS,SAAS,CAAGb,YAAY,EAAE,CAEhC,MAAO,SAAS,CAAAc,UAAUA,CAAA,CAAG,CAK3B,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpBC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,eAAe,CAChC,GAAI,CAAAhB,WAAW,EAAE,CAACiB,GAAG,CACnBlB,aAAa,CAACmB,QAAQ,CAAC,CACrBC,UAAU,CAAET,SAAS,CACrBU,QAAQ,CAAEtB,OAAO,CAACuB,QAAQ,EAAE,CAACX,SAAS,CACtCY,QAAQ,CAAE,CAEZ,CAAC,CAAC,CACH,CACF,CACH,CAAC,CAGD,MACE,CAAAhB,KAAA,CAACV,IAAI,EAAA2B,QAAA,EACHnB,IAAA,CAACT,IAAI,EAAA4B,QAAA,CAAE,sBAAoB,EAAO,CAClCnB,IAAA,CAACV,MAAM,EAACkB,OAAO,CAAEA,OAAQ,CAAAW,QAAA,CAAC,mBAAiB,EAAS,GAC/C,CAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}