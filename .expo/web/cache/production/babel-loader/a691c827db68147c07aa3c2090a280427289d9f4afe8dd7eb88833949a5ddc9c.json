{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import{loadAsync}from'expo-font';export function useFonts(map){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loaded=_useState2[0],setLoaded=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){loadAsync(map).then(function(){return setLoaded(true);}).catch(setError);},[]);return[loaded,error];}","map":{"version":3,"names":["useEffect","useState","loadAsync","useFonts","map","_useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","error","setError","then","catch"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/@expo-google-fonts/dev/useFonts.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { loadAsync } from 'expo-font';\n\n/**\n * Load a map of custom fonts to use in textual elements.\n * The map keys are used as font names, and can be used with `fontFamily: <name>;`.\n * It returns a boolean describing if all fonts are loaded.\n *\n * Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n *\n * @see https://docs.expo.io/versions/latest/sdk/font/\n * @example const [loaded, error] = useFonts(...);\n */\nexport function useFonts(map) {\n  let [loaded, setLoaded] = useState(false);\n  let [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadAsync(map)\n      .then(() => setLoaded(true))\n      .catch(setError);\n  }, []);\n\n  return [loaded, error];\n}\n"],"mappings":"iEAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,OAASC,SAAS,KAAQ,WAAW,CAYrC,MAAO,SAAS,CAAAC,QAAQA,CAACC,GAAG,CAAE,CAC5B,IAAAC,SAAA,CAA0BJ,QAAQ,CAAC,KAAK,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAwBT,QAAQ,CAAC,IAAI,CAAC,CAAAU,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEpBX,SAAS,CAAC,UAAM,CACdE,SAAS,CAACE,GAAG,CAAC,CACXU,IAAI,CAAC,iBAAM,CAAAL,SAAS,CAAC,IAAI,CAAC,GAAC,CAC3BM,KAAK,CAACF,QAAQ,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACL,MAAM,CAAEI,KAAK,CAAC,CACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}