{"ast":null,"code":"import{getPathFromState,NavigationContainerRefContext,NavigationHelpersContext}from'@react-navigation/core';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import LinkingContext from\"./LinkingContext\";import useLinkTo from\"./useLinkTo\";var getStateFromParams=function getStateFromParams(params){if(params!==null&&params!==void 0&&params.state){return params.state;}if(params!==null&&params!==void 0&&params.screen){return{routes:[{name:params.screen,params:params.params,state:params.screen?getStateFromParams(params.params):undefined}]};}return undefined;};export default function useLinkProps(_ref){var _options$getPathFromS;var to=_ref.to,action=_ref.action;var root=React.useContext(NavigationContainerRefContext);var navigation=React.useContext(NavigationHelpersContext);var _React$useContext=React.useContext(LinkingContext),options=_React$useContext.options;var linkTo=useLinkTo();var onPress=function onPress(e){var _e$currentTarget;var shouldHandle=false;if(Platform.OS!=='web'||!e){shouldHandle=e?!e.defaultPrevented:true;}else if(!e.defaultPrevented&&!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)&&[undefined,null,'','self'].includes((_e$currentTarget=e.currentTarget)===null||_e$currentTarget===void 0?void 0:_e$currentTarget.target)){e.preventDefault();shouldHandle=true;}if(shouldHandle){if(action){if(navigation){navigation.dispatch(action);}else if(root){root.dispatch(action);}else{throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");}}else{linkTo(to);}}};var getPathFromStateHelper=(_options$getPathFromS=options===null||options===void 0?void 0:options.getPathFromState)!==null&&_options$getPathFromS!==void 0?_options$getPathFromS:getPathFromState;var href=typeof to==='string'?to:getPathFromStateHelper({routes:[{name:to.screen,params:to.params,state:getStateFromParams(to.params)}]},options===null||options===void 0?void 0:options.config);return{href:href,accessibilityRole:'link',onPress:onPress};}","map":{"version":3,"names":["getPathFromState","NavigationContainerRefContext","NavigationHelpersContext","React","Platform","LinkingContext","useLinkTo","getStateFromParams","params","state","screen","routes","name","undefined","useLinkProps","_ref","_options$getPathFromS","to","action","root","useContext","navigation","_React$useContext","options","linkTo","onPress","e","_e$currentTarget","shouldHandle","OS","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","includes","currentTarget","target","preventDefault","dispatch","Error","getPathFromStateHelper","href","config","accessibilityRole"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/@react-navigation/native/lib/module/useLinkProps.tsx"],"sourcesContent":["import {\n  getPathFromState,\n  NavigationAction,\n  NavigationContainerRefContext,\n  NavigationHelpersContext,\n  NavigatorScreenParams,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport LinkingContext from './LinkingContext';\nimport useLinkTo, { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n};\n\nconst getStateFromParams = (\n  params: NavigatorScreenParams<ParamListBase, NavigationState> | undefined\n): PartialState<NavigationState> | NavigationState | undefined => {\n  if (params?.state) {\n    return params.state;\n  }\n\n  if (params?.screen) {\n    return {\n      routes: [\n        {\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error\n          state: params.screen\n            ? getStateFromParams(\n                params.params as\n                  | NavigatorScreenParams<ParamListBase, NavigationState>\n                  | undefined\n              )\n            : undefined,\n        },\n      ],\n    };\n  }\n\n  return undefined;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps<\n  ParamList extends ReactNavigation.RootParamList\n>({ to, action }: Props<ParamList>) {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationHelpersContext);\n  const { options } = React.useContext(LinkingContext);\n  const linkTo = useLinkTo<ParamList>();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\n            \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n          );\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n\n  const href =\n    typeof to === 'string'\n      ? to\n      : getPathFromStateHelper(\n          {\n            routes: [\n              {\n                name: to.screen,\n                // @ts-expect-error\n                params: to.params,\n                // @ts-expect-error\n                state: getStateFromParams(to.params),\n              },\n            ],\n          },\n          options?.config\n        );\n\n  return {\n    href,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}