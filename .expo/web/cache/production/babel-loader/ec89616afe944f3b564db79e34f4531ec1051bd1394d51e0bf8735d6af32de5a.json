{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import{GestureHandlerRootView}from\"../GestureHandler\";import HeaderContainer from\"../Header/HeaderContainer\";import CardStack from\"./CardStack\";var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};var StackView=function(_React$Component){_inherits(StackView,_React$Component);var _super=_createSuper(StackView);function StackView(){var _this;_classCallCheck(this,StackView);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"state\",{routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}});_defineProperty(_assertThisInitialized(_this),\"getPreviousRoute\",function(_ref){var route=_ref.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];});_defineProperty(_assertThisInitialized(_this),\"renderScene\",function(_ref2){var route=_ref2.route;var descriptor=_this.state.descriptors[route.key]||_this.props.descriptors[route.key];if(!descriptor){return null;}return descriptor.render();});_defineProperty(_assertThisInitialized(_this),\"renderHeader\",function(props){return React.createElement(HeaderContainer,props);});_defineProperty(_assertThisInitialized(_this),\"handleOpenRoute\",function(_ref3){var route=_ref3.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.navigate(route);}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}});_defineProperty(_assertThisInitialized(_this),\"handleCloseRoute\",function(_ref4){var route=_ref4.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}});_defineProperty(_assertThisInitialized(_this),\"handleTransitionStart\",function(_ref5,closing){var route=_ref5.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleTransitionEnd\",function(_ref6,closing){var route=_ref6.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureStart\",function(_ref7){var route=_ref7.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureEnd\",function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureCancel\",function(_ref9){var route=_ref9.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});});return _this;}_createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;return React.createElement(GestureHandlerWrapper,{style:styles.container},React.createElement(SafeAreaProviderCompat,null,React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){return React.createElement(ModalPresentationContext.Consumer,null,function(isParentModal){return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){return React.createElement(CardStack,_extends({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,renderScene:_this2.renderScene,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel},rest));});});})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys,previousRoutes=state.previousRoutes;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animationEnabled!==false:true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!==null&&_descriptor$options$a!==void 0?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(!previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})){if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}else if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref10){var key=_ref10.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);return StackView;}(React.Component);export{StackView as default};var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","StyleSheet","View","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","isArrayEqual","a","b","length","every","it","index","StackView","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_defineProperty","_assertThisInitialized","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","_ref","route","_this$state","state","filter","r","key","includes","findIndex","_ref2","descriptor","props","render","createElement","_ref3","_this$props","navigation","_this$state2","some","routeNames","name","navigate","setState","_ref4","_this$props2","dispatch","_objectSpread","pop","source","target","_ref5","closing","emit","type","data","_ref6","_ref7","_ref8","_ref9","_createClass","value","_this2","_this$props3","_","rest","_objectWithoutProperties","_excluded","_this$state3","style","styles","container","Consumer","insets","isParentModal","isParentHeaderShown","_extends","getPreviousRoute","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","onTransitionStart","handleTransitionStart","onTransitionEnd","handleTransitionEnd","renderHeader","renderScene","onGestureStart","handleGestureStart","onGestureEnd","handleGestureEnd","onGestureCancel","handleGestureCancel","getDerivedStateFromProps","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","options","animationEnabled","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","concat","_toConsumableArray","splice","_routes2","_ref10","Error","Component","default","create","flex"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/@react-navigation/stack/lib/module/views/Stack/StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  EdgeInsets,\n  SafeAreaInsetsContext,\n} from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets as EdgeInsets}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        renderScene={this.renderScene}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}