{"ast":null,"code":"var rng=require(\"./lib/rng\");var bytesToUuid=require(\"./lib/bytesToUuid\");var _nodeId;var _clockseq;var _lastMSecs=0;var _lastNSecs=0;function v1(options,buf,offset){var i=buf&&offset||0;var b=buf||[];options=options||{};var node=options.node||_nodeId;var clockseq=options.clockseq!==undefined?options.clockseq:_clockseq;if(node==null||clockseq==null){var seedBytes=rng();if(node==null){node=_nodeId=[seedBytes[0]|0x01,seedBytes[1],seedBytes[2],seedBytes[3],seedBytes[4],seedBytes[5]];}if(clockseq==null){clockseq=_clockseq=(seedBytes[6]<<8|seedBytes[7])&0x3fff;}}var msecs=options.msecs!==undefined?options.msecs:new Date().getTime();var nsecs=options.nsecs!==undefined?options.nsecs:_lastNSecs+1;var dt=msecs-_lastMSecs+(nsecs-_lastNSecs)/10000;if(dt<0&&options.clockseq===undefined){clockseq=clockseq+1&0x3fff;}if((dt<0||msecs>_lastMSecs)&&options.nsecs===undefined){nsecs=0;}if(nsecs>=10000){throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');}_lastMSecs=msecs;_lastNSecs=nsecs;_clockseq=clockseq;msecs+=12219292800000;var tl=((msecs&0xfffffff)*10000+nsecs)%0x100000000;b[i++]=tl>>>24&0xff;b[i++]=tl>>>16&0xff;b[i++]=tl>>>8&0xff;b[i++]=tl&0xff;var tmh=msecs/0x100000000*10000&0xfffffff;b[i++]=tmh>>>8&0xff;b[i++]=tmh&0xff;b[i++]=tmh>>>24&0xf|0x10;b[i++]=tmh>>>16&0xff;b[i++]=clockseq>>>8|0x80;b[i++]=clockseq&0xff;for(var n=0;n<6;++n){b[i+n]=node[n];}return buf?buf:bytesToUuid(b);}module.exports=v1;","map":{"version":3,"names":["rng","require","bytesToUuid","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","offset","i","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","module","exports"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/expo-constants/node_modules/uuid/v1.js"],"sourcesContent":["var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}