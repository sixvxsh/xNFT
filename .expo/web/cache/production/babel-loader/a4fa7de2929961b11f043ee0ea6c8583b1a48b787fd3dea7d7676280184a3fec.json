{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isKeyboardShown=_React$useState2[0],setIsKeyboardShown=_React$useState2[1];React.useEffect(function(){var handleKeyboardShow=function handleKeyboardShow(){return setIsKeyboardShown(true);};var handleKeyboardHide=function handleKeyboardHide(){return setIsKeyboardShown(false);};var subscriptions;if(Platform.OS==='ios'){subscriptions=[Keyboard.addListener('keyboardWillShow',handleKeyboardShow),Keyboard.addListener('keyboardWillHide',handleKeyboardHide)];}else{subscriptions=[Keyboard.addListener('keyboardDidShow',handleKeyboardShow),Keyboard.addListener('keyboardDidHide',handleKeyboardHide)];}return function(){subscriptions.forEach(function(s){return s.remove();});};},[]);return isKeyboardShown;}","map":{"version":3,"names":["React","Keyboard","Platform","useIsKeyboardShown","_React$useState","useState","_React$useState2","_slicedToArray","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","OS","addListener","forEach","s","remove"],"sources":["/home/sixvxsh/Programming/blockchain/backpack/xnft-quickstart-final/node_modules/@react-navigation/bottom-tabs/lib/module/utils/useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"],"mappings":"iEAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,QAAA,qDAAAC,QAAA,8CAGA,cAAe,SAAS,CAAAC,kBAATA,CAAA,CAA8B,CAC3C,IAAAC,eAAA,CAA8CJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9C,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAAOI,eAAD,CAAAF,gBAAA,IAAkBG,kBAAlB,CAAAH,gBAAA,IAENN,KAAK,CAACU,SAAN,CAAgB,UAAM,CACpB,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,QAAS,CAAAF,kBAAkB,CAAC,IAAD,CAAnD,GACA,GAAM,CAAAG,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,QAAS,CAAAH,kBAAkB,CAAC,KAAD,CAAnD,GAEA,GAAI,CAAAI,aAAJ,CAEA,GAAIX,QAAQ,CAACY,EAAT,GAAgB,KAApB,CAA2B,CACzBD,aAAa,CAAG,CACdZ,QAAQ,CAACc,WAAT,CAAqB,kBAArB,CAAyCJ,kBAAzC,CADc,CAEdV,QAAQ,CAACc,WAAT,CAAqB,kBAArB,CAAyCH,kBAAzC,CAFc,CAAhB,CAID,CALD,IAKO,CACLC,aAAa,CAAG,CACdZ,QAAQ,CAACc,WAAT,CAAqB,iBAArB,CAAwCJ,kBAAxC,CADc,CAEdV,QAAQ,CAACc,WAAT,CAAqB,iBAArB,CAAwCH,kBAAxC,CAFc,CAAhB,CAID,CAED,MAAO,WAAM,CACXC,aAAa,CAACG,OAAd,CAAuB,SAAAC,CAAD,QAAO,CAAAA,CAAC,CAACC,MAAF,EAA7B,IACD,CAFD,CAGD,CArBD,CAqBG,EArBH,EAuBA,MAAO,CAAAV,eAAP,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}